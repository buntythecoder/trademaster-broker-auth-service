# Docker profile configuration for TradeMaster Broker Auth Service
# Optimized for containerized deployment

server:
  port: 8087
  shutdown: graceful

spring:
  application:
    name: broker-auth-service
    
  # Database Configuration
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres:5432/trademaster}
    username: ${SPRING_DATASOURCE_USERNAME:trademaster}
    password: ${SPRING_DATASOURCE_PASSWORD:}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000
      
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
        
  # Flyway Configuration
  flyway:
    enabled: true
    validate-on-migrate: true
    baseline-on-migrate: true
    
  # Redis Configuration
  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST:redis}
      port: ${SPRING_DATA_REDIS_PORT:6379}
      password: ${SPRING_DATA_REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 10
          max-idle: 8
          min-idle: 2
          max-wait: 2000ms
          
  # Virtual Threads Configuration
  threads:
    virtual:
      enabled: true
      
  # Security Configuration
  security:
    oauth2:
      client:
        registration:
          zerodha:
            client-id: ${ZERODHA_CLIENT_ID:}
            client-secret: ${ZERODHA_CLIENT_SECRET:}
          upstox:
            client-id: ${UPSTOX_CLIENT_ID:}
            client-secret: ${UPSTOX_CLIENT_SECRET:}

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:health,metrics,prometheus,info}
      base-path: /actuator
  endpoint:
    health:
      show-details: ${MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS:always}
      show-components: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  health:
    redis:
      enabled: true
    db:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
        step: 10s
        descriptions: true
    distribution:
      percentiles:
        http.server.requests: 0.5, 0.75, 0.9, 0.95, 0.99
        broker.auth.duration: 0.5, 0.75, 0.9, 0.95, 0.99

# Logging Configuration
logging:
  level:
    com.trademaster: ${LOGGING_LEVEL_COM_TRADEMASTER:INFO}
    org.springframework.web: WARN
    org.springframework.security: WARN
    org.hibernate: WARN
    org.flywaydb: INFO
  pattern:
    console: ${LOGGING_PATTERN_CONSOLE:%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{correlationId}] %logger{36} - %msg%n}
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{correlationId}] %logger{36} - %msg%n"
  file:
    path: ${LOGGING_FILE_PATH:/app/logs}
    name: ${LOGGING_FILE_PATH:/app/logs}/broker-auth-service.log
    max-size: 100MB
    max-history: 10

# Application Configuration
app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}
    allowed-methods: GET,POST,PUT,DELETE,PATCH,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600

# Security Configuration
security:
  jwt:
    secret: ${JWT_SECRET:}
    expiration: 86400 # 24 hours

# Broker Configuration
broker:
  auth:
    encryption:
      key: ${BROKER_AUTH_ENCRYPTION_KEY:}
    rate-limit:
      enabled: true
      default-requests-per-minute: 60
      burst-capacity: 10
  
  # Broker-specific configurations
  zerodha:
    api-url: ${BROKER_ZERODHA_API_URL:https://api.kite.trade}
    login-url: ${BROKER_ZERODHA_LOGIN_URL:https://kite.trade/connect/login}
    rate-limit:
      api-calls-per-second: 10
      api-calls-per-day: 10000
      auth-calls-per-minute: 5
      
  upstox:
    api-url: ${BROKER_UPSTOX_API_URL:https://api.upstox.com/v2}
    login-url: ${BROKER_UPSTOX_LOGIN_URL:https://api.upstox.com/v2/login/authorization/dialog}
    rate-limit:
      api-calls-per-second: 25
      api-calls-per-day: 50000
      auth-calls-per-minute: 10
      
  angel-one:
    api-url: ${BROKER_ANGEL_ONE_API_URL:https://apiconnect.angelbroking.com}
    rate-limit:
      api-calls-per-second: 20
      api-calls-per-day: 100000
      auth-calls-per-minute: 5
      
  icici-direct:
    api-url: ${BROKER_ICICI_DIRECT_API_URL:https://api.icicidirect.com}
    rate-limit:
      api-calls-per-second: 5
      api-calls-per-day: 25000
      auth-calls-per-minute: 3

# Async Configuration
async:
  core-pool-size: 4
  max-pool-size: 16
  queue-capacity: 100
  thread-name-prefix: "broker-auth-"
  keep-alive-seconds: 60